{"version":3,"sources":["services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","className","Cryptocurrencies","simplified","cryptosList","data","isFetching","useState","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","coins","filteredData","filter","item","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","to","id","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","Text","Typography","Title","Option","Select","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","href","rel","level","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","style","width","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","App","path","element","color","textAlign","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.5b171c69.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n  'x-rapidapi-key': 'b0bd31a06fmsh844a904705c4802p1ea837jsn0c32631e3d77',\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\r\n\r\nconst createRequest = url => ({ url, headers: cryptoApiHeaders })\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: builder => ({\r\n    getCryptos: builder.query({\r\n      query: count => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest('/exchanges'),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: coinId => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n  useGetExchangesQuery,\r\n} = cryptoApi\r\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react'\nimport millify from 'millify'\nimport { Link } from 'react-router-dom'\nimport { Card, Row, Col, Input } from 'antd'\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'\nimport Loader from './Loader'\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count)\n  const [cryptos, setCryptos] = useState()\n  const [searchTerm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins)\n\n    const filteredData = cryptosList?.data?.coins.filter(item =>\n      item.name.toLowerCase().includes(searchTerm)\n    )\n\n    setCryptos(filteredData)\n  }, [cryptosList, searchTerm])\n\n  if (isFetching) return <Loader />\n\n  return (\n    <>\n      {!simplified && (\n        <div className='search-crypto'>\n          <Input\n            placeholder='Search Cryptocurrency'\n            onChange={e => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className='crypto-card-container'>\n        {cryptos?.map(currency => (\n          <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.id}>\n            <Link key={currency.id} to={`/cryptoverse/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className='crypto-image' src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Cryptocurrencies\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n  'x-bingapis-sdk': 'true',\r\n  'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n  'x-rapidapi-key': 'b0bd31a06fmsh844a904705c4802p1ea837jsn0c32631e3d77',\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\r\n\r\nconst createRequest = url => ({ url, headers: cryptoNewsHeaders })\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: 'cryptoNewsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: builder => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi\r\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport Loader from './Loader';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from 'react'\nimport millify from 'millify'\nimport { Typography, Row, Col, Statistic } from 'antd'\nimport { Link } from 'react-router-dom'\n\nimport { useGetCryptosQuery } from '../services/cryptoApi'\nimport Cryptocurrencies from './Cryptocurrencies'\nimport News from './News'\nimport Loader from './Loader'\n\nconst { Title } = Typography\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10)\n  const globalStats = data?.data?.stats\n\n  if (isFetching) return <Loader />\n\n  return (\n    <>\n      <Title level={2} className='heading'>\n        Global Crypto Stats\n      </Title>\n      <Row gutter={[32, 32]}>\n        <Col span={12}>\n          <Statistic title='Total Cryptocurrencies' value={globalStats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic title='Total Exchanges' value={millify(globalStats.totalExchanges)} />\n        </Col>\n        <Col span={12}>\n          <Statistic title='Total Market Cap:' value={`$${millify(globalStats.totalMarketCap)}`} />\n        </Col>\n        <Col span={12}>\n          <Statistic title='Total 24h Volume' value={`$${millify(globalStats.total24hVolume)}`} />\n        </Col>\n        <Col span={12}>\n          <Statistic title='Total Cryptocurrencies' value={globalStats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic title='Total Markets' value={millify(globalStats.totalMarkets)} />\n        </Col>\n      </Row>\n      <div className='home-heading-container'>\n        <Title level={2} className='home-title'>\n          Top 10 Cryptos In The World\n        </Title>\n        <Title level={3} className='show-more'>\n          <Link to='/cryptocurrencies'>Show more</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className='home-heading-container'>\n        <Title level={2} className='home-title'>\n          Latest Crypto News\n        </Title>\n        <Title level={3}>\n          <Link to='/cryptoverse/news'>Show more</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  )\n}\n\nexport default Homepage\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react'\nimport { Button, Menu, Typography, Avatar } from 'antd'\nimport { Link } from 'react-router-dom'\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from '@ant-design/icons'\n\nimport icon from '../images/cryptocurrency.png'\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true)\n  const [screenSize, setScreenSize] = useState(undefined)\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth)\n\n    window.addEventListener('resize', handleResize)\n\n    handleResize()\n\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false)\n    } else {\n      setActiveMenu(true)\n    }\n  }, [screenSize])\n\n  return (\n    <div className='nav-container'>\n      <div className='logo-container'>\n        <Avatar src={icon} size='large' />\n        <Typography.Title level={2} className='logo'>\n          <Link to='/cryptoverse'>Cryptoverse</Link>\n        </Typography.Title>\n        <Button className='menu-control-container' onClick={() => setActiveMenu(!activeMenu)}>\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme='dark'>\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to='/cryptoverse'>Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to='/cryptoverse/cryptocurrencies'>Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to='/cryptoverse/exchanges'>Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to='/cryptoverse/news'>News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport millify from 'millify'\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd'\nimport HTMLReactParser from 'html-react-parser'\n\nimport { useGetExchangesQuery } from '../services/cryptoApi'\nimport Loader from './Loader'\n\nconst { Text } = Typography\nconst { Panel } = Collapse\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery()\n  const exchangesList = data?.data?.exchanges\n\n  if (isFetching) return <Loader />\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map(exchange => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id} style={{ width: '100%' }}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar className='exchange-image' src={exchange.iconUrl} />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Exchanges\n","import React from 'react'\nimport { Line } from 'react-chartjs-2'\nimport { Col, Row, Typography } from 'antd'\nimport { Chart as ChartJS } from 'chart.js/auto'\nconst { Title } = Typography\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = []\n  const coinTimestamp = []\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price)\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString())\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      <Row className='chart-header'>\n        <Title level={2} className='chart-title'>\n          {coinName} Price Chart{' '}\n        </Title>\n        <Col className='price-container'>\n          <Title level={5} className='price-change'>\n            Change: {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className='current-price'>\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  )\n}\n\nexport default LineChart\n","import React, { useState } from 'react'\nimport HTMLReactParser from 'html-react-parser'\nimport { useParams } from 'react-router-dom'\nimport millify from 'millify'\nimport { Col, Row, Typography, Select } from 'antd'\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from '@ant-design/icons'\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi'\nimport Loader from './Loader'\nimport LineChart from './LineChart'\n\nconst { Title, Text } = Typography\nconst { Option } = Select\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams()\n  const [timePeriod, setTimePeriod] = useState('7d')\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId)\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod })\n  const cryptoDetails = data?.data?.coin\n\n  if (isFetching) return <Loader />\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y']\n\n  const stats = [\n    {\n      title: 'Price to USD',\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: '24h Volume',\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: 'Market Cap',\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: 'All-time-high(daily avg.)',\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ]\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    {\n      title: 'Number Of Exchanges',\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: 'Aprroved Supply',\n      value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: 'Total Supply',\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: 'Circulating Supply',\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ]\n\n  return (\n    <Col className='coin-detail-container'>\n      <Col className='coin-heading-container'>\n        <Title level={2} className='coin-name'>\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and\n          supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue='7d'\n        className='select-timeperiod'\n        placeholder='Select Timeperiod'\n        onChange={value => setTimePeriod(value)}\n      >\n        {time.map(date => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className='stats-container'>\n        <Col className='coin-value-statistics'>\n          <Col className='coin-value-statistics-heading'>\n            <Title level={3} className='coin-details-heading'>\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such as the base and quote\n              currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className='coin-stats'>\n              <Col className='coin-stats-name'>\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className='stats'>{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className='other-stats-info'>\n          <Col className='coin-value-statistics-heading'>\n            <Title level={3} className='coin-details-heading'>\n              Other Stats Info\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such as the base and quote\n              currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className='coin-stats'>\n              <Col className='coin-stats-name'>\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className='stats'>{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className='coin-desc-link'>\n        <Row className='coin-desc'>\n          <Title level={3} className='coin-details-heading'>\n            What is {cryptoDetails.name}?\n          </Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className='coin-links'>\n          <Title level={3} className='coin-details-heading'>\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links?.map(link => (\n            <Row className='coin-link' key={link.name}>\n              <Title level={5} className='link-name'>\n                {link.type}\n              </Title>\n              <a href={link.url} target='_blank' rel='noreferrer'>\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  )\n}\n\nexport default CryptoDetails\n","import React from 'react'\r\nimport { Routes, Route, Link } from 'react-router-dom'\r\nimport { Layout, Typography, Space } from 'antd'\r\n\r\nimport { Navbar, Exchanges, Cryptocurrencies, CryptoDetails, News, Homepage } from './components'\r\nimport './App.css'\r\nimport 'antd/dist/antd.css'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='app'>\r\n      <div className='navbar'>\r\n        <Navbar />\r\n      </div>\r\n      <div className='main'>\r\n        <Layout>\r\n          <div className='routes'>\r\n            <Routes>\r\n              <Route path='/cryptoverse' element={<Homepage />} />\r\n            </Routes>\r\n            <Routes>\r\n              <Route path='/cryptoverse/exchanges' element={<Exchanges />} />\r\n            </Routes>\r\n            <Routes>\r\n              <Route path='/cryptoverse/cryptocurrencies' element={<Cryptocurrencies />} />\r\n            </Routes>\r\n            <Routes>\r\n              <Route path='/cryptoverse/crypto/:coinId' element={<CryptoDetails />} />\r\n            </Routes>\r\n            <Routes>\r\n              <Route path='/cryptoverse/news' element={<News />} />\r\n            </Routes>\r\n          </div>\r\n        </Layout>\r\n\r\n        <div className='footer'>\r\n          <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\r\n            Cryptoverse <br />\r\n            All Rights Reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to='/cryptoverse'>Home</Link>\r\n            <Link to='/cryptoverse/exchanges'>Exchanges</Link>\r\n            <Link to='/cryptoverse/news'>News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport { cryptoApi } from '../services/cryptoApi'\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware().concat(cryptoApi.middleware, cryptoNewsApi.middleware),\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport App from './App'\r\nimport store from './app/store'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}